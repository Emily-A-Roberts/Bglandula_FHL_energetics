[
  {
    "objectID": "model_setup.html",
    "href": "model_setup.html",
    "title": "2  model setup",
    "section": "",
    "text": "3 File information\n~/Library/CloudStorage/Box-Box/Sarah and Molly’s Box/FHL data/code/set_up_workspace/Model_20210409_iter_small_barnacles_food.2.R\nThis is now set up to work with the desktop computer (different working directory) -1/20/21\nThis sets up all of the data and functions for the model predictions\nThis model is calibrated with Lisa’s data, and includes padilla bay chlorophyll seasonal data. To go back to Lisa’s dataset and check the calibration, please use this model setup.\nThis model uses lengths rather than tissue mass samples. Go back to previous models, e.g. Model_202006.._iter… for tissue mass\nIf the file is opened within the .Rproj file, then the function here::here() will find the correct data file regardless of where this is being run. An alternative option is to set the root drive using knitr, but I’m having trouble doing this with quarto. Quarto seems to require that all the .qmd files live within the root directory.\nClear the global environment\nLoad libraries and set graphics theme:\nToggle the period of interest (which 6 month period - the first or second?)\nToggle the subset of barnacles used (specify only small baracles will be used for calculations)\nToggle plots on and off (turning plotting off will speed up the code)\nMore toggles\nSet up dataframes to be used in plotting functional responses\nSet up climate change calculator\nPrevious directories included: setwd(“C:/Users/eroberts/Box/PhotoAnalysis_Sp2020/datasheets_org/20201007_data”) setwd(“~/Box/PhotoAnalysis_Sp2020/datasheets_org/20201007_data”) setwd(“~/Box/PhotoAnalysis_Sp2020/FHL/datasheets_org/20201007_data”)\nand setwd(“~/Box/Sarah and Molly’s Box/FHL data/growth_individual/ForSam_20201007”)\nand setwd(“~/Library/CloudStorage/Box-Box/PhotoAnalysis_Sp2020/FHL/datasheets_org/20201007_data/probably final data set”)\nMore growth plots and table\nThis information is not used in this model. It was used for the previous analysis of the larger barnacles.\nLarger barnacles did not change in opercular length much, but their tissue mass and condition index varied. We were not able to quantify reproductive ouput, and reproductive timing confounded tissue gain and loss of larger barnacles. Given this issue, we chose to focus on the growth rates of small barnacles.\nVisually, this looks like: High – 1.97 m = 6.46 ft Mid – 1.55 m = 5.08 ft Low – 1.20 m = 3.93 ft Bars denote plus or minus 0.05 m (= 0.16 ft)\nIn email January 8, 2020, Gordon got: High = 1.98m Mid = 1.58m Low = 1.18m\nFrom diagrams I know that the whole setup is about 3.5 ft from bottom to top, with 1 ft in between each layer of tiles. More like 2.5 bc not at edge\nData found in:\n#setwd(“~/Box/Sarah and Molly’s Box/FHL data/SONDE data/Padilla Bay/909184_all_data_2003topresent”)\nsetwd(“C:/Users/eroberts/Box/Sarah and Molly’s Box/FHL data/SONDE data/Padilla Bay/909184_all_data_2003topresent”)\nsetwd(“~/Library/CloudStorage/Box-Box/Sarah and Molly’s Box/FHL data/SONDE data/Padilla Bay/909184_all_data_2003topresent/”)\nRead in data\nPlots of chlorophyll\nRead in feeding, respiration relationships\nFeeding ~ Temp, Aquatic Respiration ~ Temp, Aerial Respiration ~ Temp Feeding shrimp per min ~ Temp C, Upslope to 20 degrees\nUse a subset of the data, up to 20 degrees to interpolate feeding rate upslope,\nWu and Levings equation with random component, assuming allometric scaling factor"
  },
  {
    "objectID": "model_setup.html#quarto-information",
    "href": "model_setup.html#quarto-information",
    "title": "2  model_setup",
    "section": "2.1 Quarto information",
    "text": "2.1 Quarto information\nQuarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code."
  },
  {
    "objectID": "model_setup.html#aim-read-in-environmental-data-and-physiology-functions",
    "href": "model_setup.html#aim-read-in-environmental-data-and-physiology-functions",
    "title": "2  model setup",
    "section": "2.1 Aim: Read in environmental data and physiology functions",
    "text": "2.1 Aim: Read in environmental data and physiology functions"
  },
  {
    "objectID": "model_setup.html#aquatic-respiration-umol-oxygen-per-min-temp-deg-c",
    "href": "model_setup.html#aquatic-respiration-umol-oxygen-per-min-temp-deg-c",
    "title": "2  model setup",
    "section": "10.1 Aquatic respiration (umol oxygen per min) ~ Temp (deg C)",
    "text": "10.1 Aquatic respiration (umol oxygen per min) ~ Temp (deg C)\nUpslope to 23 degrees\nUse a subset of the data, up to 23 degrees to interpolate respiration rate upslope,\nWu and Levings equation with random component, assuming allometric scaling factor\nPreviously found:\nsetwd(“~/Box/Sarah and Molly’s Box/FHL data/aqua feeding and resp”) setwd(“C:/Users/eroberts/Box/Sarah and Molly’s Box/FHL data/aqua feeding and resp”)\n\nresp<- read.table(here::here(\"data/physiology_data/AQtotalresp_FHL.csv\"), header = T, sep = \",\")\nresp$Temp<- as.factor(resp$Temp)\nresp$Operc\n\n [1] 5.11 5.11 5.11 5.99 5.99 5.99 5.03 5.03 5.03 5.75 5.75 5.75 5.22 5.22 4.87\n[16] 4.87 4.87 5.86 5.86 5.86 4.63 4.63 4.63 5.77 5.77 5.77 5.46 5.46 5.46 4.50\n[31] 4.50 4.50 5.07 5.07 5.07 5.70 5.70 5.70 4.95 4.95 4.95 5.29 5.29 5.29 4.80\n[46] 4.80 4.80 5.05 5.05 5.05 4.70 4.70 4.70 5.51 5.51 5.51 5.51 5.51 5.51 5.60\n[61] 5.60 5.60\n\nresp$ID <- as.factor(resp$Barnacle)\nresp$Temp.n <- as.numeric(as.character(resp$Temp))\nresp$sizeclass <- bin(resp$Operc, nbins = 3, labels = c(\"small\", \"medium\", \"large\"))\nresp$bin <- bin(resp$Operc, nbins = 3) #(4.02,4.97] (4.97,5.91] (5.91,6.86]\n\nresp_below_23 <- resp[resp$Temp.n < 23,] #Changed 2020 Aug 12\nresp <- resp_below_23\n\nAQR_T <- nlme(Respiration.Rate ~ c * exp(a * Temp.n) * Operc^1.88,\n              data = resp,\n              fixed = a + c ~ 1,\n              random = c ~ 1,\n              groups = ~ ID,\n              start = c(a = 0.0547657, c = 0.0003792))\nsummary(AQR_T) \n\nNonlinear mixed-effects model fit by maximum likelihood\n  Model: Respiration.Rate ~ c * exp(a * Temp.n) * Operc^1.88 \n  Data: resp \n        AIC       BIC   logLik\n  -379.3246 -372.1878 193.6623\n\nRandom effects:\n Formula: c ~ 1 | ID\n                   c    Residual\nStdDev: 9.908437e-09 0.002966555\n\nFixed effects:  a + c ~ 1 \n       Value  Std.Error DF  t-value p-value\na 0.08030545 0.04076867 22 1.969783  0.0616\nc 0.00003485 0.00002405 22 1.448871  0.1615\n Correlation: \n  a     \nc -0.966\n\nStandardized Within-Group Residuals:\n       Min         Q1        Med         Q3        Max \n-1.4500246 -0.7135749 -0.2393238  0.4736441  2.2773886 \n\nNumber of Observations: 44\nNumber of Groups: 21 \n\nAQR_T_a <- AQR_T$coefficients$fixed[[1]]\nAQR_T_c <- AQR_T$coefficients$fixed[[2]]\n\nAQR_T_fun <- function(temp, size, c = AQR_T_c, a = AQR_T_a) {\n  out <- c * exp(a * temp) * size^1.88\n  return(out)\n}\n\n\npred.dat.aqua$aq_resp <- AQR_T_fun(temp = pred.dat.aqua$Temp.n, size = pred.dat.aqua$OperculumLength)\npred.dat$aq_resp <- AQR_T_fun(temp = pred.dat$Temp.n, size = pred.dat$OperculumLength)\n\nif(figs == \"Y\"){\n\n    # ggplot(resp,aes(x=Temp.n,y=Respiration.Rate,color=factor(sizeclass)))+\n    #   geom_point()+\n    #   geom_line(data = pred.dat.aqua, \n    #             aes(x = as.numeric(Temp.n), \n    #                 y=as.numeric(aq_resp), \n    #                 color = factor(sizeclass)))+\n    #   xlim(5,18)+\n    #   ylim(0,.01)\n\nresp_aq <- resp\ngg2 <- ggplot(resp_aq,aes(x=Temp.n,y=Respiration.Rate,color=Operc))+\n    geom_point()+\n    scale_color_viridis(option = \"D\", limits = c(4,7))+\n    geom_line(data = pred.dat.aqua, \n              aes(x = as.numeric(Temp.n), \n                  y=as.numeric(aq_resp), \n                  color = OperculumLength, group = as.factor(sizeclass)))+\n    xlim(5,34)+\n    # ylim(0,.01)+\n    xlab(expression(paste(\"Seawater temp (\",degree,\"C)\")))+\n    ylab(\"Aquatic repiration (umol min -1)\")\ngg2  \n\n    }"
  },
  {
    "objectID": "model_setup.html#aerial-exposure-respiration-umol-oxygen-per-15-min-temp-deg-c",
    "href": "model_setup.html#aerial-exposure-respiration-umol-oxygen-per-15-min-temp-deg-c",
    "title": "2  model setup",
    "section": "10.2 Aerial exposure respiration (umol oxygen per 15 min) ~ Temp (deg C)",
    "text": "10.2 Aerial exposure respiration (umol oxygen per 15 min) ~ Temp (deg C)\nUpslope to 25 deg, 30 deg, and quadratic\nTwo hypotheses: Upslope vs. unimodal hypothesis\nData originally here:\nsetwd(“~/Box/Sarah and Molly’s Box/FHL data/aerial resp”) setwd(“C:/Users/eroberts/Box/Sarah and Molly’s Box/FHL data/aerial resp”)\n\nresp<- read.csv(here::here(\"data/physiology_data/FHLmean15mins_recovery_forMolly_40deg.csv\"), stringsAsFactors = FALSE, header = T, sep = \",\")\nresp$Temp<- as.factor(resp$Temp)\nresp$Operc <- resp$operculum_length\nresp$Temp.n <- as.numeric(as.character(resp$Temp))\nresp$Respiration.Rate <- resp$air_15min\nresp$Barnacle <- as.factor(resp$Barnacle)\nresp$sizeclass <- bin(resp$Operc, nbins = 3, labels = c(\"small\", \"medium\", \"large\"))\nresp$bin <- bin(resp$Operc, nbins = 3) #(4.02,4.97] (4.97,5.91] (5.91,6.86]\n\nresp_below_30 <- resp[resp$Temp.n <= 30,]\nresp_below_25 <- resp[resp$Temp.n <= 25,]\n\n\nAER_EXPOSE_T_25 <- nlme(Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32,\n                        data = resp_below_25,\n                        fixed = a + c ~ 1,\n                        random = c ~ 1,\n                        groups = ~ Barnacle,\n                        start = c(a = 0.0547657, c = 0.0003792))\nsummary(AER_EXPOSE_T_25) \n\nNonlinear mixed-effects model fit by maximum likelihood\n  Model: Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32 \n  Data: resp_below_25 \n        AIC      BIC   logLik\n  -79.53297 -73.1989 43.76649\n\nRandom effects:\n Formula: c ~ 1 | Barnacle\n                   c   Residual\nStdDev: 2.586767e-08 0.07174233\n\nFixed effects:  a + c ~ 1 \n       Value   Std.Error DF  t-value p-value\na 0.06727408 0.018785384 14 3.581193  0.0030\nc 0.00072931 0.000296084 14 2.463202  0.0273\n Correlation: \n  a     \nc -0.976\n\nStandardized Within-Group Residuals:\n       Min         Q1        Med         Q3        Max \n-2.0695968 -0.7307817 -0.1549091  0.5659112  2.0172261 \n\nNumber of Observations: 36\nNumber of Groups: 21 \n\nAER_EXPOSE_T_25_a <- AER_EXPOSE_T_25$coefficients$fixed[[1]]\nAER_EXPOSE_T_25_c <- AER_EXPOSE_T_25$coefficients$fixed[[2]]\n\n\nAER_EXPOSE_T_30 <- nlme(Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32,\n                        data = resp_below_30,\n                        fixed = a + c ~ 1,\n                        random = c ~ 1,\n                        groups = ~ Barnacle,\n                        start = c(a = 0.0547657, c = 0.0003792))\nsummary(AER_EXPOSE_T_30) \n\nNonlinear mixed-effects model fit by maximum likelihood\n  Model: Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32 \n  Data: resp_below_30 \n        AIC       BIC   logLik\n  -101.7062 -94.47956 54.85311\n\nRandom effects:\n Formula: c ~ 1 | Barnacle\n                  c   Residual\nStdDev: 4.49608e-08 0.07151154\n\nFixed effects:  a + c ~ 1 \n       Value   Std.Error DF  t-value p-value\na 0.04562355 0.011564376 23 3.945181  0.0006\nc 0.00105427 0.000304119 23 3.466623  0.0021\n Correlation: \n  a     \nc -0.967\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.96859864 -0.61433908 -0.05521089  0.46918810  1.96195111 \n\nNumber of Observations: 45\nNumber of Groups: 21 \n\nAER_EXPOSE_T_30_a <- AER_EXPOSE_T_30$coefficients$fixed[[1]]\nAER_EXPOSE_T_30_c <- AER_EXPOSE_T_30$coefficients$fixed[[2]]\n\n\nAER_EXPOSE_T_all <- nlme(Respiration.Rate ~ c * exp(a1*Temp.n) * exp(a2*Temp.n^2) * Operc^2.32,\n                         data = resp,\n                         fixed = a1 + a2 + c ~ 1,\n                         random = c ~ 1,\n                         groups = ~ Barnacle,\n                         start = c(a1 = 2.201e-01, a2 = -4.623e-03, c = 1.433e-05))\nsummary(AER_EXPOSE_T_all) \n\nNonlinear mixed-effects model fit by maximum likelihood\n  Model: Respiration.Rate ~ c * exp(a1 * Temp.n) * exp(a2 * Temp.n^2) *      Operc^2.32 \n  Data: resp \n        AIC      BIC   logLik\n  -134.7807 -124.065 72.39035\n\nRandom effects:\n Formula: c ~ 1 | Barnacle\n                   c   Residual\nStdDev: 1.911226e-09 0.07668941\n\nFixed effects:  a1 + a2 + c ~ 1 \n         Value  Std.Error DF   t-value p-value\na1  0.19135365 0.05626881 40  3.400706  0.0015\na2 -0.00335510 0.00105077 40 -3.192979  0.0027\nc   0.00025335 0.00018253 40  1.388047  0.1728\n Correlation: \n   a1     a2    \na2 -0.988       \nc  -0.979  0.938\n\nStandardized Within-Group Residuals:\n       Min         Q1        Med         Q3        Max \n-2.0738357 -0.7486660 -0.2012656  0.4367642  3.4985767 \n\nNumber of Observations: 63\nNumber of Groups: 21 \n\nAER_EXPOSE_T_all_a1 <- AER_EXPOSE_T_all$coefficients$fixed[[1]]\nAER_EXPOSE_T_all_a2 <- AER_EXPOSE_T_all$coefficients$fixed[[2]]\nAER_EXPOSE_T_all_c <- AER_EXPOSE_T_all$coefficients$fixed[[3]]\n\nSet functions\n\n# Aerial exposure respiration rate\nAER_EXPOSE_T_25_fcn <- function(temp, size, c = AER_EXPOSE_T_25_c, a = AER_EXPOSE_T_25_a) {\n  out <- c * exp(a * temp) * size^2.32\n  return(out)\n}\nAER_EXPOSE_T_30_fcn <- function(temp, size, c = AER_EXPOSE_T_30_c, a = AER_EXPOSE_T_30_a) {\n  out <- c * exp(a * temp) * size^2.32\n  return(out)\n}\nAER_EXPOSE_T_all_fcn <- function(temp, size, c = AER_EXPOSE_T_all_c, a1 = AER_EXPOSE_T_all_a1, a2 = AER_EXPOSE_T_all_a2) {\n  out <- c * exp(a1 * temp) * exp(a2 * temp^2) * size^2.32\n  return(out)\n}\n\n\n10.2.0.1 Compare predicted respiration curves from aerial exposure.\nThe dashed line indicates the growth curve when data up to 25C is used.\nThe solid line indicates the growth curve when data up to 30C is used.\n\n# predicted values of respiration at a particular size and temp, above and below the graph axis limits won't be included on the graph, and this will produce an unnecessary warning\n\n# Predicted values based on temp and size and function\npred.dat$pred_25 <- AER_EXPOSE_T_25_fcn(pred.dat$Temp.n, pred.dat$Operc)\npred.dat$pred_30 <- AER_EXPOSE_T_30_fcn(pred.dat$Temp.n, pred.dat$Operc)\npred.dat$pred_all <- AER_EXPOSE_T_all_fcn(pred.dat$Temp.n, pred.dat$Operc)\npred.dat.air$pred_25 <- AER_EXPOSE_T_25_fcn(pred.dat.air$Temp.n, pred.dat.air$Operc)\npred.dat.air$pred_30 <- AER_EXPOSE_T_30_fcn(pred.dat.air$Temp.n, pred.dat.air$Operc)\npred.dat.air$pred_all <- AER_EXPOSE_T_all_fcn(pred.dat.air$Temp.n, pred.dat.air$Operc)\npred.dat.air$air_resp_exposure_25 <- AER_EXPOSE_T_25_fcn(temp = pred.dat.air$Temp.n, size = pred.dat.air$OperculumLength)\npred.dat.air$air_resp_exposure_30 <- AER_EXPOSE_T_30_fcn(temp = pred.dat.air$Temp.n, size = pred.dat.air$OperculumLength)\npred.dat.air$air_resp_exposure_all <- AER_EXPOSE_T_all_fcn(temp = pred.dat.air$Temp.n, size = pred.dat.air$OperculumLength)\n\n\nif(figs == \"Y\"){\n  # ggplot(resp,aes(x=Temp.n,y=Respiration.Rate,color=factor(sizeclass)))+\n  #   geom_point()+\n  #   ylab(\"Aerial Respiration (umol per 15 min)\") +\n  #   xlab(\"Temp (deg C)\")+\n  #   geom_line(data = pred.dat, aes(x = as.numeric(Temp.n),\n  #                                  y=as.numeric(pred_30), color = factor(sizeclass)), linetype = \"dashed\")+\n  #   geom_line(data = pred.dat, aes(x = as.numeric(Temp.n),\n  #                                  y=as.numeric(pred_all), color = factor(sizeclass)), linetype = \"dotted\")+\n  #   geom_line(data = pred.dat, aes(x = as.numeric(Temp.n),\n  #                                  y=as.numeric(pred_25), color = factor(sizeclass)), linetype = \"solid\")\n  resp_exp <- resp\n  gg3 <- ggplot(resp_exp,aes(x=Temp.n,y=Respiration.Rate/15,color=Operc))+\n    geom_point()+\n    scale_color_viridis(option = \"D\", limits = c(4,7))+\n    geom_line(data = pred.dat.air, \n              aes(x = as.numeric(Temp.n), \n                  y=as.numeric(pred_25)/15, \n                  color = OperculumLength, group = as.factor(sizeclass)), linetype = \"dashed\")+\n    geom_line(data = pred.dat.air, \n              aes(x = as.numeric(Temp.n), \n                  y=as.numeric(pred_30)/15, \n                  color = OperculumLength, group = as.factor(sizeclass)))+\n    xlim(5,34)+\n    ylim(0,.03)+\n    xlab(expression(paste(\"Low tide temp (\",degree,\"C)\")))+\n    ylab(\"Aerial repiration during exposure \\n (umol per min)\")\n  gg3  \n  }"
  },
  {
    "objectID": "model_setup.html#aerial-recovery-respiration-temp",
    "href": "model_setup.html#aerial-recovery-respiration-temp",
    "title": "2  model setup",
    "section": "10.3 Aerial recovery respiration ~ Temp",
    "text": "10.3 Aerial recovery respiration ~ Temp\nWe start with umol oxygen total, but then calculate umol oxygen per 15 min exposure # Upslope to 30 deg C\nTwo hypotheses: Upslope vs. unimodal hypothesis\nOriginal file location:\nsetwd(“~/Box/Sarah and Molly’s Box/FHL data/aerial resp”) setwd(“C:/Users/eroberts/Box/Sarah and Molly’s Box/FHL data/aerial resp”)\n\n#setwd(\"~/Documents/GitHub/Bglandula_FHL_energetics/data/physiology_data\")\nresp<- read.csv(here::here(\"data/physiology_data/FHLmean15mins_recovery_forMolly_40deg.csv\"), stringsAsFactors = FALSE, header = T, sep = \",\")\nresp$Temp<- as.factor(resp$Temp)\nresp$Operc <- resp$operculum_length\nresp$Temp.n <- as.numeric(as.character(resp$Temp))\nresp$Barnacle <- as.factor(resp$Barnacle)\nresp$Respiration.Rate <- resp$total_aquat\nresp$sizeclass <- bin(resp$Operc, nbins = 3, labels = c(\"small\", \"medium\", \"large\"))\nresp$bin <- bin(resp$Operc, nbins = 3) #(4.02,4.97] (4.97,5.91] (5.91,6.86]\n\n# ramp.time <- (resp$Temp.n-10)/10 * 1\n# time.at.temp <- 5 - ramp.time\n# plot(resp$Temp.n, time.at.temp*60)\n\nresp_below_30 <- resp[resp$Temp.n <= 30,]\nAER_RECOVER_T_30 <- nlme(Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32,\n                         data = resp_below_30,\n                         fixed = a + c ~ 1,\n                         random = c ~ 1,\n                         groups = ~ Barnacle,\n                         start = c(a = 0.0547657, c = 0.0003792))\nsummary(AER_RECOVER_T_30)\n\nNonlinear mixed-effects model fit by maximum likelihood\n  Model: Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32 \n  Data: resp_below_30 \n       AIC      BIC    logLik\n  123.8877 131.1143 -57.94383\n\nRandom effects:\n Formula: c ~ 1 | Barnacle\n                  c Residual\nStdDev: 0.005496651 0.760159\n\nFixed effects:  a + c ~ 1 \n       Value   Std.Error DF  t-value p-value\na 0.02533049 0.007438323 23 3.405403  0.0024\nc 0.02677801 0.004731447 23 5.659582  0.0000\n Correlation: \n  a     \nc -0.922\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.57906671 -0.55250687  0.04581654  0.59614921  2.87270684 \n\nNumber of Observations: 45\nNumber of Groups: 21 \n\nAER_RECOVER_T_30_a <- AER_RECOVER_T_30$coefficients$fixed[[1]]\nAER_RECOVER_T_30_c <- AER_RECOVER_T_30$coefficients$fixed[[2]]\n\nresp_below_25 <- resp[resp$Temp.n <= 25,]\nAER_RECOVER_T_25 <- nlme(Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32,\n                         data = resp_below_25,\n                         fixed = a + c ~ 1,\n                         random = c ~ 1,\n                         groups = ~ Barnacle,\n                         start = c(a = 0.0547657, c = 0.0003792))\nsummary(AER_RECOVER_T_25)\n\nNonlinear mixed-effects model fit by maximum likelihood\n  Model: Respiration.Rate ~ c * exp(a * Temp.n) * Operc^2.32 \n  Data: resp_below_25 \n       AIC      BIC    logLik\n  104.9978 111.3319 -48.49889\n\nRandom effects:\n Formula: c ~ 1 | Barnacle\n                   c  Residual\nStdDev: 3.379089e-07 0.9307663\n\nFixed effects:  a + c ~ 1 \n       Value   Std.Error DF  t-value p-value\na 0.02535853 0.012637535 14 2.006604  0.0645\nc 0.02827648 0.007020458 14 4.027726  0.0012\n Correlation: \n  a     \nc -0.961\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.90771877 -0.54742747 -0.03751482  0.85742531  2.64338811 \n\nNumber of Observations: 36\nNumber of Groups: 21 \n\nAER_RECOVER_T_25_a <- AER_RECOVER_T_25$coefficients$fixed[[1]]\nAER_RECOVER_T_25_c <- AER_RECOVER_T_25$coefficients$fixed[[2]]\n\n\nAER_RECOVER_T_all <- nlme(Respiration.Rate ~ c * exp(a1*Temp.n) * exp(a2*Temp.n^2) * Operc^2.32,\n                         data = resp,\n                         fixed = a1 + a2 + c ~ 1,\n                         random = c ~ 1,\n                         groups = ~ Barnacle,\n                         start = c(a1 = 2.201e-01, a2 = -4.623e-03, c = 1.433e-05))\nsummary(AER_RECOVER_T_all)\n\nNonlinear mixed-effects model fit by maximum likelihood\n  Model: Respiration.Rate ~ c * exp(a1 * Temp.n) * exp(a2 * Temp.n^2) *      Operc^2.32 \n  Data: resp \n       AIC      BIC    logLik\n  167.9247 178.6404 -78.96236\n\nRandom effects:\n Formula: c ~ 1 | Barnacle\n                   c  Residual\nStdDev: 2.575648e-07 0.8474125\n\nFixed effects:  a1 + a2 + c ~ 1 \n         Value  Std.Error DF   t-value p-value\na1  0.14556719 0.03740761 40  3.891380  0.0004\na2 -0.00320245 0.00077591 40 -4.127322  0.0002\nc   0.01014330 0.00428424 40  2.367581  0.0228\n Correlation: \n   a1     a2    \na2 -0.984       \nc  -0.973  0.923\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-2.18678256 -0.71760458 -0.03881334  0.67003322  2.61192546 \n\nNumber of Observations: 63\nNumber of Groups: 21 \n\nAER_RECOVER_T_all_a1 <- AER_RECOVER_T_all$coefficients$fixed[[1]]\nAER_RECOVER_T_all_a2 <- AER_RECOVER_T_all$coefficients$fixed[[2]]\nAER_RECOVER_T_all_c <- AER_RECOVER_T_all$coefficients$fixed[[3]]\n\n\nAER_RECOVER_T_25_fcn <- function(temp, size, c = AER_RECOVER_T_25_c, a = AER_RECOVER_T_25_a) {\n  out <- c * exp(a * temp) * size^2.32\n  return(out)\n}\nAER_RECOVER_T_30_fcn <- function(temp, size, c = AER_RECOVER_T_30_c, a = AER_RECOVER_T_30_a) {\n  out <- c * exp(a * temp) * size^2.32\n  return(out)\n}\nAER_RECOVER_T_all_fcn <- function(temp, size, c = AER_RECOVER_T_all_c, a1 = AER_RECOVER_T_all_a1, a2 = AER_RECOVER_T_all_a2) {\n  out <- c * exp(a1 * temp) * exp(a2 * temp^2) * size^2.32\n  return(out)\n}\n\n# Here I need to add the weirdness bit to account for time... but after I calc this is OK... \n\nAgain the dashed line represents the fit if data up to 25C is used.\nThe solid line represents the fit if data up to 30C is used.\n\npred.dat$pred_25 <- AER_RECOVER_T_25_fcn(pred.dat$Temp.n, pred.dat$Operc)\npred.dat$pred_30 <- AER_RECOVER_T_30_fcn(pred.dat$Temp.n, pred.dat$Operc)\npred.dat$pred_all <- AER_RECOVER_T_all_fcn(pred.dat$Temp.n, pred.dat$Operc)\n\npred.dat.air$pred_25 <- AER_RECOVER_T_25_fcn(pred.dat.air$Temp.n, pred.dat.air$Operc)\npred.dat.air$pred_30 <- AER_RECOVER_T_30_fcn(pred.dat.air$Temp.n, pred.dat.air$Operc)\npred.dat.air$pred_all <- AER_RECOVER_T_all_fcn(pred.dat.air$Temp.n, pred.dat.air$Operc)\n\n\nif(figs == \"Y\"){\n  # ggplot(resp,aes(x=Temp.n,y=Respiration.Rate,color=factor(sizeclass)))+\n  #   geom_point()+\n  #   ylab(\"Aerial recover respiration (total umol)\") +\n  #   xlab(\"Temp (deg C)\")+\n  #   # geom_line(data = pred.dat, aes(x = as.numeric(Temp.n),\n  #   #                                y=as.numeric(pred_all), color = factor(sizeclass)), linetype = \"dashed\")+\n  #   geom_line(data = pred.dat, aes(x = as.numeric(Temp.n),\n  #                                  y=as.numeric(pred_30), color = factor(sizeclass)), linetype = \"dotted\")+\n  #   geom_line(data = pred.dat, aes(x = as.numeric(Temp.n),\n  #                                  y=as.numeric(pred_25), color = factor(sizeclass)), linetype = \"solid\")\n\n  resp_recov <- resp\n  gg4 <- ggplot(resp_recov,aes(x=Temp.n,y=Respiration.Rate,color=Operc))+\n    geom_point()+\n    scale_color_viridis(option = \"D\", limits = c(4,7))+\n    geom_line(data = pred.dat.air, \n              aes(x = as.numeric(Temp.n), \n                  y=as.numeric(pred_25), \n                  color = OperculumLength, group = as.factor(sizeclass)), linetype = \"dashed\")+\n    geom_line(data = pred.dat.air, \n              aes(x = as.numeric(Temp.n), \n                  y=as.numeric(pred_30), \n                  color = OperculumLength, group = as.factor(sizeclass)))+\n    xlim(5,34)+\n    #ylim(0,.01)+\n    xlab(expression(paste(\"Low tide temp (\",degree,\"C)\")))+\n    ylab(\"Aerial recovery total respiration \\n (total umol)\")\n  gg4   \n  \n}\n\n\n\n\n\nggarrange(gg1,gg3,gg2,gg4, ncol=2, nrow=2, common.legend = TRUE, legend=\"bottom\")"
  },
  {
    "objectID": "model_setup.html#section",
    "href": "model_setup.html#section",
    "title": "2  model setup",
    "section": "10.4 ",
    "text": "10.4"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Bglandula_FHL_energetics",
    "section": "0.1 Welcome",
    "text": "0.1 Welcome\nThis is the intertidal barnacle energetics project built for the Friday Harbor Laboratories field experiments."
  },
  {
    "objectID": "index.html#quarto-information",
    "href": "index.html#quarto-information",
    "title": "Bglandula_FHL_energetics",
    "section": "0.2 Quarto information",
    "text": "0.2 Quarto information\nThis project uses quarto. Quarto is similar to Rmarkdown and enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org.\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code."
  }
]